{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GidGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iLA0CeA,EApCK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAmBxC,OACI,0BAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAgB,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OAFAc,QAAQC,IAAKN,EAAIC,EAAOV,GAGpB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,+BAAMA,EAAN,OCJCS,EAAU,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,SAAgB,ECDd,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAECH,EAAU,CACNjB,KAAMoB,EACNL,SAAS,SAI1B,CAAEtB,IAGEuB,EDlB0BK,CAAc5B,GAAlCa,EAFyB,EAE9BN,KAAae,EAFiB,EAEjBA,QAGrB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDlB,GAEnDsB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEPL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAQnB,EAAIC,IACPD,UEWlBoB,EA3BO,WAAO,IAAD,EAEY5C,mBAAS,CAAC,gBAFtB,mBAEjB6C,EAFiB,KAEL9C,EAFK,KAIxB,OACI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI6B,IAAQ7B,EACRA,SAAWA,U,MCVvCgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.779a08d4.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nconst AddCategory = ({ setCategories } ) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if ( InputValue.trim().length > 2 ) {\r\n            setCategories ( cats => [ InputValue, ...cats] )\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type='text'\r\n                value={ InputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n        setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&api_key=54w1fObf0DbAz3Al7xEWu8UewZzgFloP&limit=10`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from \"react\";\r\n\r\nexport const GidGridItem = ( { id, title, url } ) => {\r\n\r\n    console.log( id, title, url );\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}","import React  from \"react\";\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport { GidGridItem } from \"./GifGridItem\";\r\n\r\n\r\nexport const GifGrid = ({ category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'> { category }</h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GidGridItem\r\n                            key = { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                    setState ({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from './Components/AddCategory'\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch!!'])\r\n\r\n    return(\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key = { category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default GiftExpertApp","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from \"./GiftExpertApp\";\n\nimport './index.css'\n\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}